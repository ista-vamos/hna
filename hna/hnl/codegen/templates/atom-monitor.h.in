#ifndef ATOM_MONITOR__@monitor_name@
#define ATOM_MONITOR__@monitor_name@

#include "atom-base.h"
#include "instance.h"
#include "atom-identifier.h"

@namespace_start@

class AtomMonitor : public AtomBase<Instance> {
  const AtomIdentifier _id;

protected:
  AtomMonitor(const AtomIdentifier& identifier, int ty) : AtomBase(ty), _id(identifier) {}

public:
  virtual ~AtomMonitor() {}

  AtomMonitor(const AtomIdentifier& identifier) : AtomBase(std::get<0>(identifier)), _id(identifier) {}

  const AtomIdentifier& id() const { return _id; }
};

@namespace_end@

#endif // ATOM_MONITOR__@monitor_name@
