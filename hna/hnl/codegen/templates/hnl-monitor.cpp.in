#ifdef MEASURE_CPUTIME
#include <ctime>
#endif // !MEASURE_CPUTIME

#include <cassert>

#include "hnl-monitor.h"

@namespace_start@

Verdict HNLMonitor::step() {
    // generate function traces
    @functions_step@

    // step the monitor(s)
    return _monitor.step();
}

// adding and extending traces
void HNLMonitor::newTrace(unsigned trace_id) {
    _traces.newTrace(trace_id);
}

void HNLMonitor::traceFinished(unsigned trace_id) {
    _traces.traceFinished(trace_id);
}

void HNLMonitor::extendTrace(unsigned trace_id, const Event &e) {
  _traces.extendTrace(trace_id, e);
}

void HNLMonitor::noFutureUpdates() {
    _traces.noFutureUpdates();
}

bool HNLMonitor::allTracesFinished() {
    bool finished =  _traces.allTracesFinished();
    if (finished) {
        @functions_finished@
    }
    return finished;
}

bool HNLMonitor::hasTrace(unsigned trace_id) {
    return _traces.hasTrace(trace_id);
}

@namespace_end@
